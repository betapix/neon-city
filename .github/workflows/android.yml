name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install JS dependencies
        run: |
          # Prefer npm if an npm lockfile exists (even if yarn.lock is present)
          if [ -f package-lock.json ]; then
            # Prefer clean install; if out of sync, fall back to regular install
            npm ci || npm install
          elif [ -f yarn.lock ]; then
            corepack enable
            corepack prepare yarn@stable --activate
            # Try strict install first; if lockfile is out of sync, try regular, then disable immutability
            yarn install --immutable --immutable-cache \
              || yarn install \
              || YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install
          else
            npm install
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Make Gradle wrapper executable
        working-directory: android
        run: chmod +x ./gradlew

      - name: Generate debug keystore
        working-directory: android
        run: |
          keytool -genkey -v -keystore app/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"

      - name: Generate production keystore
        working-directory: android
        run: |
          keytool -genkey -v -keystore app/release.keystore -storepass production123 -alias production -keypass production123 -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Neon City,O=Your Company,C=US"

      - name: Set environment for production build
        run: |
          echo "NODE_ENV=production" >> $GITHUB_ENV
          echo "EXPO_PUBLIC_ENV=production" >> $GITHUB_ENV

      - name: Build production bundle
        run: |
          npx expo export --platform android --output-dir android/app/src/main/assets --clear

      - name: Build Production APK
        working-directory: android
        run: ./gradlew --no-daemon clean assembleRelease

      - name: Upload Production APK
        uses: actions/upload-artifact@v4
        with:
          name: app-production-apk
          path: android/app/build/outputs/apk/release/*.apk


